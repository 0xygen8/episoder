#!/bin/sh
# episoder, http://tools.desire.ch/episoder/
#
# Copyright (c) 2004, 2005 Stefan Ott. All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Id$

export EPISODER_VERSION=0.2.4
export EPISODER_HOME=/usr/share/episoder

show_help() {
	echo Usage: $0 [options] command
	echo 
	echo Valid options:
	echo "	-h, --help	show this help"
	echo "	-rc, --rc=FILE	use configuration from FILE (default: ~/.episoder)"
	echo "	-v, --verbose	verbose operation (builddb only)"
	echo "	-vv, --very_verbose	very verbose operation (builddb only)"
	echo "	-V, --version	get version information"
	echo "	-n [days]	number of future days to show (default: 1)"
	echo "	-d [YYYY-MM-DD]	date to begin search or update from"
	echo "	-nd, --nodate	ignore default cut-off date set in .episoder (with -d)"
	echo "	-s [string]	string to search for"
	echo "	-sa [string]	string to search for ignoring date"
	echo "	-i, --nocase	case insensitive search (with -s or -sa)"
	echo
	echo Commands are:
	echo "	builddb		rebuild the database"
	echo "	showlist	show the list of upcoming episodes"
}

set_verbose() {
	export VERBOSE=true
}
set_very_verbose() {
	export VERBOSE=true
	export VERY_VERBOSE=true
	export WGET_ARGS="-v"
}
set_nocase() {
	export NOCASE=true
	export GREP_ARGS="-i"
	export SED_ARGS="I"
}
set_nodate() {
	export NODATE=true
}

parse_arguments() {
	# set some default values
	EPISODER_RC_FILE=~/.episoder
	NUM_DAYS=1
	SEARCH_TEXT=""
	SEARCHALL_TEXT=""
	DATE_TEXT=""

	for arg in $*; do
		if [ "$RC_FILE_NEXT" ]; then
			EPISODER_RC_FILE=$arg
			RC_FILE_NEXT=
		elif [ "$NUMDAYS_NEXT" ]; then
			NUM_DAYS=$arg
			NUMDAYS_NEXT=
		elif [ "$SEARCHTEXT_NEXT" ]; then
			SEARCH_TEXT=$arg
			SEARCHTEXT_NEXT=
		elif [ "$SEARCHALLTEXT_NEXT" ]; then
			SEARCHALL_TEXT=$arg
			SEARCHALLTEXT_NEXT=
		elif [ "$DATE_NEXT" ]; then
			DATE_TEXT=$arg
			DATE_NEXT=
		elif [ "$arg" == "-rc" ]; then
			RC_FILE_NEXT=true
		elif [ "$arg" == "-n" ]; then
			NUMDAYS_NEXT=true
		elif [ "$arg" == "-s" ]; then
			SEARCHTEXT_NEXT=true
		elif [ "$arg" == "-sa" ]; then
			SEARCHALLTEXT_NEXT=true
		elif [ "$arg" == "-d" ]; then
			DATE_NEXT=true
		elif [ ! -z "`echo $arg | grep -- '--rc='`" ]; then
			EPISODER_RC_FILE=`echo $arg | cut -d '=' -f 2`
		elif [ "$arg" == "-h" ] || [ "$arg" == "--help" ]; then
			show_help
			exit 0
		elif [ "$arg" == "-v" ] || [ "$arg" == "--verbose" ]; then
			set_verbose
		elif [ "$arg" == "-vv" ] || [ "$arg" == "--very_verbose" ]; then
			set_very_verbose
		elif [ "$arg" == "-i" ] || [ "$arg" == "--nocase" ]; then
			set_nocase
		elif [ "$arg" == "-nd" ] || [ "$arg" == "--nodate" ]; then
			set_nodate
		elif [ "$arg" == "-V" ] || [ "$arg" == "--version" ]; then
			echo episoder v$EPISODER_VERSION
			exit 0
		else
			COMMAND=$arg
		fi
	done
}

validate_arguments() {
	if [ -z "$COMMAND" ]; then show_help; exit 1; fi
	if [ ! -f "$EPISODER_RC_FILE" ]; then
		echo "Configuration file $EPISODER_RC_FILE does not exist / is not a regular file"
		exit 1
	fi

	EPISODER_DATAFILE=`cat $EPISODER_RC_FILE | grep '^data=' | cut -b 6-`
	WGET_USER_AGENT=`cat $EPISODER_RC_FILE | grep '^agent=' | cut -b 7-`
	OUTPUT_FORMAT=`cat $EPISODER_RC_FILE | grep '^format=' | cut -b 8-`
	DATE_FORMAT=`cat $EPISODER_RC_FILE | grep '^dateformat=' | cut -b 12-`
	DEFAULT_DATE=`cat $EPISODER_RC_FILE | grep '^default_date=' | cut -b 14-`

	if [ -z "$EPISODER_DATAFILE" ]; then
		echo "No data file specified in configuration file"
		exit 1
	fi
	if [ -z "$OUTPUT_FORMAT" ]; then
        OUTPUT_FORMAT="%airdate %show %seasonx%epnum"
    fi
	if [ $COMMAND = "builddb" ]; then
		if [ -z "$DEFAULT_DATE" ]; then
			if [ -z $DATE_TEXT ]; then
				TODAY=`date +%Y-%m-%d`
	    	    DATE_TEXT=$TODAY
			fi
		else
			if [ -z "$NODATE" ]; then
				DATE_TEXT=$DEFAULT_DATE
			fi
    	fi
	fi
}

parse_arguments $*
validate_arguments

case "$COMMAND" in
	builddb)
	    . $EPISODER_HOME/episoder-builddb.sh
		build_db
		;;
	showlist)
		. $EPISODER_HOME/episoder-showlist.sh
		show_episode_list
		;;
	*)
		show_help
		exit 1
esac
