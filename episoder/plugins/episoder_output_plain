#!/usr/bin/env python
#
# episoder output plugin for plain output, http://episoder.sourceforge.net/
#
# Copyright (c) 2004-2008 Stefan Ott. All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Id$

import re
import sys
from episoder import *
from os import environ

class PlainRenderer(object):
	def __init__(self, data):
		self.data = data
		self.readConfigValuesFromConfFile()

	def sortEpisodes(self, a, b):
		aSeconds = int(a.airdate.strftime('%s'))
		bSeconds = int(b.airdate.strftime('%s'))
		return aSeconds - bSeconds

	def readConfigValuesFromConfFile(self):
		self.format="%airdate %show %seasonx%epnum"
		self.outfile="/tmp/null"

		if 'EPISODER_RC_FILE' not in environ:
			print "EPISODER_RC_FILE env variable not set - exiting"
			sys.exit(1)

		file = open(environ['EPISODER_RC_FILE'], 'r')
		for line in file.readlines():
			line = line[0:-1]
			if re.match('^format=', line):
				(_, self.format) = line.split('=')
			elif re.match('^data=', line):
				(_, self.outfile) = line.split('=')

		file.close()

	def render(self):
		episodes = []
		for show in self.data.shows:
			for episode in show.episodes:
				episode.show = show.title
				episodes.append(episode)

		episodes.sort(cmp=self.sortEpisodes)

		(fd, name) = mkstemp()
		file = fdopen(fd, 'w')

		for episode in episodes:
			text = self.format
			epnum = "%02d" % episode.episode

			text = text.replace("%airdate", str(episode.airdate))
			text = text.replace("%show", episode.show)
			text = text.replace("%season", str(episode.season))
			text = text.replace("%epnum", str(epnum))
			text = text.replace("%eptitle", episode.title)
			text = text.replace("%totalep", str(episode.total))
			text = text.replace("%prodnum", str(episode.prodnum))
			file.write("%s\n" % text.encode('iso-8859-1'))

		file.close()
		shutil.move(name, self.outfile)

def main(argv=sys.argv):
	if len(argv) < 2:
		return 1

	dbfile = argv[1]

	data = EpisoderData(dbfile)
	try:
		data.load()
		renderer = PlainRenderer(data)
		renderer.render()
	except IOError:
		print "Could not open %s" % dbfile
		return 2

if __name__ == "__main__":
	sys.exit(main())
